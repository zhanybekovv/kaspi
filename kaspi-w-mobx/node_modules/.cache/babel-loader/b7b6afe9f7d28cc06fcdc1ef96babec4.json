{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/norton/Documents/frontEnd/kaspi/my-app/kaspi-w-mobx/src/components/Subdivision/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { DivisionIdContext } from '../../App';\nimport { useAuth } from '../../App';\nimport './index.css';\nconst Subdivision = observer(_c = _s(function Subdivision(props) {\n  var _store$getDivision;\n\n  _s();\n\n  const {\n    element,\n    style\n  } = props;\n  const divisionId = useContext(DivisionIdContext);\n  const [expanded, setExpanded] = useState(false);\n  const store = useAuth();\n\n  const toggle = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleOnClick = event => {\n    event.stopPropagation();\n    divisionId.selectedDivisionId = element;\n  };\n\n  const x = store.getDivision(element);\n\n  const showNodes = () => {\n    if ((x === null || x === void 0 ? void 0 : x.subdivisions) && x.subdivisions.length > 0) {\n      const arNodes = x.subdivisions.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Subdivision, {\n          element: item.id,\n          style: style\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this);\n      });\n      return arNodes;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        onClick: handleOnClick,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            paddingRight: 8,\n            paddingLeft: 8\n          },\n          children: (_store$getDivision = store.getDivision(element)) === null || _store$getDivision === void 0 ? void 0 : _store$getDivision.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}, \"G9sTV6HncLdjOveJBXIYxE9GOMs=\", false, function () {\n  return [useAuth];\n}));\n_c2 = Subdivision;\nexport default Subdivision;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Subdivision$observer\");\n$RefreshReg$(_c2, \"Subdivision\");","map":{"version":3,"sources":["/home/norton/Documents/frontEnd/kaspi/my-app/kaspi-w-mobx/src/components/Subdivision/index.tsx"],"names":["React","useState","useContext","observer","DivisionIdContext","useAuth","Subdivision","props","element","style","divisionId","expanded","setExpanded","store","toggle","handleOnClick","event","stopPropagation","selectedDivisionId","x","getDivision","showNodes","subdivisions","length","arNodes","map","item","index","id","paddingRight","paddingLeft","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AAGA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,aAAP;AAEA,MAAMC,WAAsB,GAAGH,QAAQ,SAAE,SAASG,WAAT,CAAqBC,KAArB,EAAkC;AAAA;;AAAA;;AACzE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBF,KAA3B;AACA,QAAMG,UAAU,GAAGR,UAAU,CAACE,iBAAD,CAA7B;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMY,KAAK,GAAGR,OAAO,EAArB;;AACA,QAAMS,MAAM,GAAG,MAAM;AACnBF,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIA,QAAMI,aAAa,GAAIC,KAAD,IAAgB;AACpCA,IAAAA,KAAK,CAACC,eAAN;AACAP,IAAAA,UAAU,CAACQ,kBAAX,GAAgCV,OAAhC;AACD,GAHD;;AAOA,QAAMW,CAAC,GAAGN,KAAK,CAACO,WAAN,CAAkBZ,OAAlB,CAAV;;AACA,QAAMa,SAAS,GAAG,MAAM;AACtB,QAAI,CAAAF,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEG,YAAH,KAAmBH,CAAC,CAACG,YAAF,CAAeC,MAAf,GAAwB,CAA/C,EAAkD;AAChD,YAAMC,OAAO,GAAGL,CAAC,CAACG,YAAF,CAAeG,GAAf,CAAmB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClD,4BAAO,QAAC,WAAD;AAAyB,UAAA,OAAO,EAAED,IAAI,CAACE,EAAvC;AAA2C,UAAA,KAAK,EAAEnB;AAAlD,WAAkBkB,KAAlB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFe,CAAhB;AAGA,aAAOH,OAAP;AACD;AACF,GAPD;;AAUA,sBACE;AAAK,IAAA,KAAK,EAAEf,KAAZ;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,OAAO,EAAEM,aAAlC;AAAA,+BAEE;AAAI,UAAA,KAAK,EAAE;AAACc,YAAAA,YAAY,EAAE,CAAf;AAAkBC,YAAAA,WAAW,EAAE;AAA/B,WAAX;AAAA,0CAA+CjB,KAAK,CAACO,WAAN,CAAkBZ,OAAlB,CAA/C,uDAA+C,mBAA4BuB;AAA3E;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAtCsC;AAAA,UAIvB1B,OAJuB;AAAA,GAAvC;MAAMC,W;AAwCN,eAAeA,WAAf","sourcesContent":["import React, { FC, useState, useContext } from 'react'\n\nimport { Props } from './props'\nimport { observer } from 'mobx-react-lite'\nimport { DivisionIdContext } from '../../App' \nimport { useAuth } from '../../App'\n\nimport './index.css'\n\nconst Subdivision: FC<Props> = observer( function Subdivision(props: Props){\n  const { element, style } = props\n  const divisionId = useContext(DivisionIdContext)\n  const [expanded, setExpanded] = useState(false)\n  const store = useAuth()\n  const toggle = () => {\n    setExpanded(!expanded)\n  }\n\n  const handleOnClick = (event: any) => {\n    event.stopPropagation()\n    divisionId.selectedDivisionId = element\n  }\n\n  \n\n  const x = store.getDivision(element)\n  const showNodes = () => {\n    if (x?.subdivisions && x.subdivisions.length > 0) {\n      const arNodes = x.subdivisions.map((item, index) => {\n        return <Subdivision key={index} element={item.id} style={style}/>\n      })\n      return arNodes\n    }\n  }\n\n\n  return (\n    <div style={style}>\n      <div className='row'>\n        <div className='heading' onClick={handleOnClick}>\n          {/* <button onClick={() => toggle()}>{expanded ? '-' : '+'}</button> */}\n          <h3 style={{paddingRight: 8, paddingLeft: 8}}>{store.getDivision(element)?.name}</h3>\n        </div>\n        {/* {expanded && <div style={{ padding: 20 }}>{showNodes()}</div>} */}\n      </div>\n    </div>\n  )\n})\n\nexport default Subdivision\n"]},"metadata":{},"sourceType":"module"}