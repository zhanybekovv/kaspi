{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/norton/Documents/frontEnd/kaspi/my-app/kaspi-w-mobx/src/components/AutoSize.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { useLayoutEffect } from \"react\";\n\nconst AutoSize = function AutoSize({\n  children: ChildComponent\n}) {\n  _s();\n\n  const containerRef = useRef(null);\n  const [width, setWidth] = useState(null);\n  const [height, setHeight] = useState(null);\n  const renderChildren = width !== null && height !== null;\n  useLayoutEffect(() => {\n    const container = containerRef.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      const entry = entries[0];\n      setWidth(entry.contentRect.width);\n      setHeight(entry.contentRect.height);\n      console.log(entry);\n    });\n    resizeObserver.observe(container);\n    return () => resizeObserver.disconnect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: renderChildren && /*#__PURE__*/_jsxDEV(ChildComponent, {\n      width: width,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AutoSize, \"d5hu4YGMgLWOgDgC3OBmRrk8038=\");\n\n_c = AutoSize;\nexport default AutoSize;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoSize\");","map":{"version":3,"sources":["/home/norton/Documents/frontEnd/kaspi/my-app/kaspi-w-mobx/src/components/AutoSize.tsx"],"names":["React","useState","useRef","useLayoutEffect","AutoSize","children","ChildComponent","containerRef","width","setWidth","height","setHeight","renderChildren","container","current","resizeObserver","ResizeObserver","entries","entry","contentRect","console","log","observe","disconnect"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,eAAT,QAAgC,OAAhC;;AAOA,MAAMC,QAAQ,GAAG,SAASA,QAAT,CAAkB;AACjCC,EAAAA,QAAQ,EAAEC;AADuB,CAAlB,EAID;AAAA;;AAEd,QAAMC,YAAY,GAAGL,MAAM,CAAiB,IAAjB,CAA3B;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAMW,cAAc,GAAGJ,KAAK,KAAK,IAAV,IAAkBE,MAAM,KAAK,IAApD;AAEAP,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMU,SAAS,GAAGN,YAAY,CAACO,OAA/B;AACA,UAAMC,cAAc,GAAG,IAAIC,cAAJ,CAAoBC,OAAD,IAAkB;AAC1D,YAAMC,KAAK,GAAGD,OAAO,CAAC,CAAD,CAArB;AACAR,MAAAA,QAAQ,CAACS,KAAK,CAACC,WAAN,CAAkBX,KAAnB,CAAR;AACAG,MAAAA,SAAS,CAACO,KAAK,CAACC,WAAN,CAAkBT,MAAnB,CAAT;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD,KALsB,CAAvB;AAOAH,IAAAA,cAAc,CAACO,OAAf,CAAuBT,SAAvB;AAEA,WAAO,MAAME,cAAc,CAACQ,UAAf,EAAb;AACD,GAZc,EAYZ,EAZY,CAAf;AAcA,sBACE;AAAK,IAAA,GAAG,EAAEhB,YAAV;AAAwB,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBE,MAAAA,MAAM,EAAE;AAAzB,KAA/B;AAAA,cACIE,cAAc,iBAAI,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEJ,KAAvB;AAA8B,MAAA,MAAM,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA;AADtB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCD;;GAAMN,Q;;KAAAA,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { ReactNode } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useLayoutEffect } from \"react\";\r\n\r\nexport type AutoSizeContentProps = {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst AutoSize = function AutoSize({\r\n  children: ChildComponent,\r\n}: {\r\n  children: React.FunctionComponent<AutoSizeContentProps>;\r\n}): JSX.Element {\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null as any);\r\n\r\n  const [width, setWidth] = useState(null as any);\r\n  const [height, setHeight] = useState(null as any);\r\n\r\n  const renderChildren = width !== null && height !== null;\r\n\r\n  useLayoutEffect(() => {\r\n    const container = containerRef.current;\r\n    const resizeObserver = new ResizeObserver((entries: any) => {\r\n      const entry = entries[0];\r\n      setWidth(entry.contentRect.width);\r\n      setHeight(entry.contentRect.height);\r\n      console.log(entry);\r\n    });\r\n\r\n    resizeObserver.observe(container);\r\n\r\n    return () => resizeObserver.disconnect();\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={containerRef} style={{ width: \"100%\", height: \"100%\"}}>\r\n      { renderChildren && <ChildComponent width={width} height={height}/> }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoSize;"]},"metadata":{},"sourceType":"module"}